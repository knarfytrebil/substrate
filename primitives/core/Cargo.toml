[package]
name = "sp-core"
version = "2.0.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"

[dependencies]
sp-std = { version = "2.0.0", default-features = false, path = "../std" }
codec = { package = "parity-scale-codec", version = "1.0.0", default-features = false, features = ["derive"] }
rustc-hex = { version = "2.0.1", default-features = false }
log = { version = "0.4.8", default-features = false }
serde = { version = "1.0.101", optional = true, features = ["derive"] }
byteorder = { version = "1.3.2", default-features = false }
primitive-types = { version = "0.6", default-features = false, features = ["codec"] }
impl-serde = { version = "0.3.0", optional = true }
wasmi = { version = "0.6.2", optional = true }
hash-db = { version = "0.15.2", default-features = false }
hash256-std-hasher = { version = "0.15.2", default-features = false }
base58 = { version = "0.1.0", optional = true }
rand = { version = "0.7.2", optional = true }
rand_old = {package="rand", version = "0.6.5", optional = true }
substrate-bip39 = { version = "0.3.1", optional = true }
tiny-bip39 = { version = "0.6.2", optional = true }
regex = { version = "1.3.1", optional = true }
num-traits = { version = "0.2.8", default-features = false }
zeroize = { version = "1.0.0", default-features = false }
lazy_static = { version = "1.4.0", default-features = false, optional = true }
parking_lot = { version = "0.9.0", optional = true }
threshold_crypto =  { git = "https://github.com/poanetwork/threshold_crypto",  features = ["codec-support"], default-features = false, optional = true }
pairing = { version = "0.14.2", features = ["u128-support"],optional=true }
rand_chacha = { version =  "0.1.1", optional=true }
pbkdf2 = { version = "0.3.0", default-features = false,optional=true  }
# badger = { package= "hbbft", path="../../../hbbft", optional=true }
bincode = { version = "1.2.0", optional=true}
# curv = {git = "https://github.com/KZen-networks/curv", tag = "v0.2.2", features =  ["ec_secp256k1","rust-gmp"], optional=true }
# multi-party-ecdsa = { package = "multi-party-ecdsa", git = "https://github.com/kigawas/multi-party-ecdsa", branch = "fix-nightly",optional=true}
# secp256k1_wrap = { package = "secp256k1", version="0.15.5",optional=true}
tiny-keccak = { version = "2.0.1", features = ["keccak"], optional = true }
sp-debug-derive = { version = "2.0.0", path = "../debug-derive" }
sp-externalities = { version = "2.0.0", optional = true, path = "../externalities" }
sp-storage = { version = "2.0.0", default-features = false, path = "../storage" }

# full crypto
ed25519-dalek = { version = "1.0.0-pre.3", default-features = false, features = ["u64_backend", "alloc"], optional = true }
blake2-rfc = { version = "0.2.18", default-features = false, optional = true }
schnorrkel = { version = "0.8.5", features = ["preaudit_deprecated", "u64_backend"], default-features = false, optional = true }
libsecp256k1 = { version = "0.3.2", default-features = false }
sha2 = { version = "0.8.0", default-features = false, optional = true }
hex = { version = "0.4", default-features = false, optional = true }
twox-hash = { version = "1.5.0", default-features = false, optional = true }

sp-runtime-interface = { version = "2.0.0", default-features = false, path = "../runtime-interface" }


hmac = { version = "0.7.1",optional=true}
[dev-dependencies]
sp-serializer = { version = "2.0.0", path = "../serializer" }
pretty_assertions = "0.6.1"
hex-literal = "0.2.1"

criterion = "0.2.11"
serde_json = "1.0"

[[bench]]
name = "bench"
harness = false

[lib]
bench = false

[features]
default = ["std"]
std = [
	"full_crypto",
	"log/std",
	"pbkdf2",
	"bincode",
	"hmac",
	# "curv",
	# "secp256k1_wrap",
	"threshold_crypto",
	# "multi-party-ecdsa",
	# "badger",
	"pairing",
	"rand_chacha",
	"wasmi",
	"lazy_static",
	"parking_lot",
	"primitive-types/std",
	"primitive-types/serde",
	"primitive-types/byteorder",
	"primitive-types/rustc-hex",
	"primitive-types/libc",
	"impl-serde",
	"codec/std",
	"hash256-std-hasher/std",
	"hash-db/std",
	"sp-std/std",
	"serde",
	"rustc-hex/std",
	"twox-hash/std",
	"blake2-rfc/std",
	"ed25519-dalek/std",
	"hex/std",
	"base58",
	"substrate-bip39",
	"tiny-bip39",
	"serde",
	"byteorder/std",
	"rand",
	"rand_old",
	"sha2/std",
	"schnorrkel/std",
	"regex",
	"num-traits/std",
	"libsecp256k1/std",
	"tiny-keccak",
	"sp-debug-derive/std",
	"sp-externalities",
	"sp-storage/std",
	"sp-runtime-interface/std",
	"zeroize/alloc"
]

# This feature enables all crypto primitives for `no_std` builds like microcontrollers
# or Intel SGX.
# For the regular wasm runtime builds this should not be used.
full_crypto = [
	"threshold_crypto",
	"ed25519-dalek",
	"blake2-rfc",
	"tiny-keccak",
	"schnorrkel",
	"hex",
	"sha2",
	"twox-hash",
	"sp-runtime-interface/disable_target_static_assertions",
]
